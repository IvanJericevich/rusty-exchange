//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.2

use super::sea_orm_active_enums::OrderSide;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "positions")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub avg_entry_price: f32,
    pub size: f32,
    pub side: OrderSide,
    pub sub_account_id: i32,
    pub market_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::markets::Entity",
        from = "Column::MarketId",
        to = "super::markets::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Markets,
    #[sea_orm(
        belongs_to = "super::sub_accounts::Entity",
        from = "Column::SubAccountId",
        to = "super::sub_accounts::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    SubAccounts,
}

impl Related<super::markets::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Markets.def()
    }
}

impl Related<super::sub_accounts::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SubAccounts.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
